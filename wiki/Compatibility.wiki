#summary Migration - incompatible changes across versions
#labels Featured

= Introduction =

Prior to the final version 1.0 release, backward compatibility cannot be guaranteed. The purpose of this page is to maintain a log of backward incompatible changes made between releases, in order to assist users migrating from versions between 1.0M1 and 1.0 final.

This is not a change log. See the per milestone bug list for changes applying for a particular milestone.

= Details =

== 1.0M1 to 1.0M2 ==

*module command renamed*
_Interactive Test Runner_: deprecated the `module` command. To reload an individual module, use `reload %module name%` instead of `module %module name%`.

------
------

== 1.0M2 to 1.0M3 ==

=== Removed !WebModuleServlet and !RootWebModuleServlet=== 
`WebModuleServlet` and `RootWebModuleServlet`, which gave the capabilities of initializing the module directly from the servlet's _web.xml_, have been removed, in favour of `org.impalaframework.web.servlet.ExternalModuleServlet`, which uses the _moduledefinitions.xml_. This is more flexible and more consistent with other modules.

*Action:* If you are using this servlet in web.xml, will need to convert to using one of the other supported servlets.

------

=== !ModuleManagementFactory renamed=== 
`ModuleManagementFactory` interface has been renamed to `ModuleManagementFacade`. Also `DefaultModuleManagementFactory` (SVN 2398)

This should not affect you unless you are working with the project internals.

=== Renamed folder 'spring'=== 
The module folder *spring*, which contains the module Spring context file and other resources, has now been renamed to *resources* (SVN 2410)

*Action:* In each project, rename the folder 'spring' to 'resources'.

------

=== Default context location for root module === 
This now follows same convention as other modules (_modulename_-context.xml). 

*Action:* If root module context doesn't explicitly specify context locations, will need to rename the file accordingly.
Alternatively, explicitly set this location by adding _context-locations_ entry in _module.properties_.

------
------

== 1.0M3 to 1.0M4 ==

=== Moved packages to eliminate package cycles (ticket #88 - SVN 2698) ===

The following classes and interfaces have been moved to the package: `org.impalaframework.module`
   * `ApplicationContextLoader`
   * `DelegatingContextLoader`
   * `ModificationExtractor`
   * `ModificationExtractorType`
   * `ModuleStateChange`
   * `ModuleElementNames`
   * `TypeReader`
   * `ModuleLoader`
   * `TransitionSet`
   * `ModuleStateChangeNotifier`
   * `ModuleStateChangeListener`
   * `ModuleStateHolder`
   * `Transition`
   * `TransitionProcessor`

The following have been moved to `org.impalaframework.facade`
   * `InternalOperationsFacade`
   * `DefaultModuleManagementFacade`
  
The following has been moved to `org.impalaframework.module.definition`
   * `ModuleDefinitionAware`
  
The following to `org.impalaframework.module.loader`
   * `ModuleLoaderRegistryFactoryBean`
  
The following have been moved to `org.impalaframework.service`
   * `ContributionEndpoint`
   * `ContributionEndpointTargetSource`
   * `ServiceReferenceFilter`
   * `ServiceRegistry`
   * `ServiceRegistryReference`

The following has been moved to `org.impalaframework.service.registry.internal`
   * `ServiceRegistryImpl`
  
The following has been moved to `org.impalaframework.constants`
   * `LocationConstants`
   
Also, minor changes have been made to the internal structure of the Impala bean definitions, although this should 
not affect average users.
  
*Action*: For snapshot revisions from SVN 2692, will need to apply these package names to remove compile errors.  

----
 
=== More convenient default test `ModuleDefinitionSource` (ticket #90) ===

Partly because of the removal of package cycles, partly because of [http://code.google.com/p/impala/issues/detail?id=90 issue 90]
test classes that use `InternalModuleDefinitionSource` will need to change:

Code such as the following will no longer work:

{{{
public RootModuleDefinition getModuleDefinition() {
	return new InternalModuleDefinitionSource(new String[] { "example-dao", "example-hibernate" }).getModuleDefinition();
}
}}}

*action*: replace this code with the following:

{{{
public RootModuleDefinition getModuleDefinition() {
	return new TestDefinitionSource("example-dao", "example-hibernate").getModuleDefinition();
}
}}}

Note that the new code is simpler because the name of the test class is more intuitive, 
but also because it allows the module names to be specified using a varargs array.

*Action*: For snapshot revisions from SVN 2692, will need to apply these package names to remove compile errors.  

----
 
=== Moved packages to simplify package structure (ticket #88) ===

The following classes and interfaces have been moved to the package: `org.impalaframework.file`
  * `FileMonitor`
  * `RootPathAwareFileFilter`
  * `FileRecurser
(SVN 2744)

Package `org.impalaframework.service.registry.contribution` renamed to `org.impalaframework.service.contribution`.
Package `org.impalaframework.service.registry.event` renamed to `org.impalaframework.service.event`.
Package `org.impalaframework.service.registry.filter` renamed to `org.impalaframework.service.filter`.
(SVN 2746)