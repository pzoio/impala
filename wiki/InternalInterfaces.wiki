#summary Interfaces used internally within Impala

== Introduction ==

As a casual user of the framework you will rarely need to use the interfaces described below. However, when extending Impala, or developing Impala,
and occasionally when debugging, knowledge of these interfaces can be very useful indeed.

As background for this discussion, it is helpful to bear in mind the processes and operations involved when loading and managing modules.

== Interfaces ==

=== [http://code.google.com/p/impala/source/browse/trunk/impala/impala-core/src/org/impalaframework/resolver/ModuleLocationResolver.java ModuleLocationResolver] ===

`ModuleLocationResolver` is responsible for determining where to find modules. Impala supports a number of deployment configurations, such as standalone deployment of jar files,
deployment of modules as jar files in a web application's _WEB-INF/modules_ directory, and deployment directly from the _bin_ directory of an Eclipse project on the 
file system. Each of these scenarios requires a different strategy for module loading, and hence a different implementation of `ModuleLocationResolver`.

=== [http://code.google.com/p/impala/source/browse/trunk/impala/impala-core/src/org/impalaframework/module/type/TypeReader.java TypeReader] ===

Impala features the concept of a module type. Examples include root modules, application modules, servlet modules, etc.
The idea behind `TypeReader` is that each of module types will require its own strategy for reading metadata about the modules.

Type readers support a mechanism for reading module type information from XML (in the form of an `org.w3c.dom.Element` instance) or properties (for example read 
from a properties file.

=== [http://code.google.com/p/impala/source/browse/trunk/impala/impala-core/src/org/impalaframework/module/loader/ModuleLoader.java ModuleLoader] ===

=== [http://code.google.com/p/impala/source/browse/trunk/impala/impala-core/src/org/impalaframework/module/loader/ModuleLoaderRegistry.java ModuleLoaderRegistry] ===

=== [http://code.google.com/p/impala/source/browse/trunk/impala/impala-core/src/org/impalaframework/module/loader/ApplicationContextLoader.java ApplicationContextLoader] ===

=== [http://code.google.com/p/impala/source/browse/trunk/impala/impala-core/src/org/impalaframework/module/loader/DelegatingContextLoader.java DelegatingContextLoader] ===

=== [http://code.google.com/p/impala/source/browse/trunk/impala/impala-core/src/org/impalaframework/module/monitor/ModuleChangeMonitor.java ModuleChangeMonitor] ===

=== [http://code.google.com/p/impala/source/browse/trunk/impala/impala-core/src/org/impalaframework/module/modification/ModificationExtractor.java ModificationExtractor] ===

=== [http://code.google.com/p/impala/source/browse/trunk/impala/impala-core/src/org/impalaframework/module/modification/ModificationExtractorRegistry.java ModificationExtractorRegistry] ===

=== [http://code.google.com/p/impala/source/browse/trunk/impala/impala-core/src/org/impalaframework/module/transition/TransitionProcessor.java TransitionProcessor] ===

=== [http://code.google.com/p/impala/source/browse/trunk/impala/impala-core/src/org/impalaframework/module/transition/TransitionProcessorRegistry.java TransitionProcessorRegistry] ===

=== [http://code.google.com/p/impala/source/browse/trunk/impala/impala-core/src/org/impalaframework/module/holder/ModuleStateHolder.java ModuleStateHolder] ===

=== [http://code.google.com/p/impala/source/browse/trunk/impala/impala-core/src/org/impalaframework/module/holder/ModuleStateChangeNotifier.java ModuleStateChangeNotifier] ===

=== [http://code.google.com/p/impala/source/browse/trunk/impala/impala-core/src/org/impalaframework/module/holder/ModuleStateChangeListener.java ModuleStateChangeListener] ===

=== [http://code.google.com/p/impala/source/browse/trunk/impala/impala-core/src/org/impalaframework/module/operation/ModuleOperation.java ModuleOperation] ===

=== [http://code.google.com/p/impala/source/browse/trunk/impala/impala-core/src/org/impalaframework/module/operation/ModuleOperationRegistry.java ModuleOperationRegistry] ===

=== [http://code.google.com/p/impala/source/browse/trunk/impala/impala-core/src/org/impalaframework/module/bootstrap/ModuleManagementFacade.java ModuleManagementFacade] ===

An internal interface which is used to access instances of other Impala-specific interfaces. Also extends `BeanFactory` so that it can access any Spring-configured Impala bean directly.
