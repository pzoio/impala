#summary Checking out the examples

The easiest way to access the examples is to check them out directly from trunk.

= Web frameworks sample =

The web frameworks sample demonstrates tight integration with a number of web frameworks, showing how Impala can offer full module reloading and Spring integration capability with multiple web frameworks, all running in separate modules and using separate filters. The example demonstrates some advanced aspects of Impala's web framework support, such as per-module root Spring application contexts, thread context class loader management, preservation of session state across module reload.

It also features a JMX console for module reloading.

Examples are created for Struts 1, Tapestry 5 and Wicket.

== Project Setup ==

{{{
svn co https://impala.googlecode.com/svn/trunk/webframeworks webframeworks
}}}

Then open an Eclipse workspace in the new _webframeworks_ folder, and import all the projects into the workspace.

== Run the Sample ==

From within Eclipse, run `StartServer` as a web application. Then connect using the URL:

http://localhost:8080/webframeworks-web/

----

= Petclinic sample =

The Petclinic sample is based on the Spring Petclinic 2.0.x sample, with a few minor modifications. The principal modification is that the application has been divided into a number of modules:

  * a _main_ module
  * a _hibernate_ module
  * a _dao_ module
  * a _web_ module

== Project Setup ==

Get the source using:

{{{
svn co https://impala.googlecode.com/svn/trunk/petclinic petclinic
}}}

Then open an Eclipse workspace in the new _petclinic_ folder, and import all the projects into the workspace.

== Database setup ==

Because this example uses the MySQL database, you will need this installed.

Now set up the database:
 * First, from petclinic/db, run createDB.txt (as root). This creates the petclinic user
      `mysql -u root < createDB.txt`
 * Then as the petclinic user, insert the tables
      `mysql -u petclinic -ppetclinic petclinic < initDB.txt`
 * To insert data, run
      `mysql -u petclinic -ppetclinic petclinic < populateDB.txt`

== What to run ==

To run the tests from Eclipse, simply run the main class `AllTests` as a JUnit test, 
which is in the project _petclinic-tests_.

To run up the web application, simply run the main class `StartServer`, 
which is in the project _petclinic-web_. This time, run it as a (main) Java application.

Connect using the URL http://localhost:8080/petclinic-web/

To run up the interactive test runner, run `HibernateClinicTest` as a Java application. 
Type u for usage. You can run this class as a standard JUnit test - it's part of the `AllTests` suite.

*Note*: this text is based on:
http://impalablog.blogspot.com/2008/01/springs-petclinic-sample-impala-style.html