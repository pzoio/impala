#summary Getting started, part one - setting up an Impala project

= New Project !QuickStart =

This page tells you how to build your first Impala project, creating an Impala workspace and project structure, with a modular, test-backed, web application. The application is effectively the Impala Hello World application, but as you will see in part 2 and part 3, it will take you much further than simply printing a message on your screen.

== Downloading the Distribution ==

First, start by downloading the latest snapshot distribution of Impala from the subversion repository.

{{{
http://impala.googlecode.com/svn/trunk/impala/impala/dist/impala-SNAPSHOT.zip
}}}

You can do this via the web browser. From Linux or Mac OSX you may find it more convenient to use curl.

{{{
cd ~
curl -o impala-SNAPSHOT.zip http://impala.googlecode.com/svn/trunk/impala/impala/dist/impala-SNAPSHOT.zip
}}}

You can then unzip the Impala distribution:

{{{
unzip impala-SNAPSHOT.zip
}}}

== Generating New Project Artifacts ==

Once you've unzipped Impala, set the IMPALA_HOME environment property.

{{{
IMPALA_HOME=~/impala-SNAPSHOT
export IMPALA_HOME
}}}

In windows, you will probably want to use the GUI to do the same.

Now, change to IMPALA_HOME, and run the following command:

{{{
ant newproject
}}}

 _*Note:* that this command requires Impala 1.0M3. If you are still using the impala-1.0M2, then you will need to use the following command instead: `ant -f scaffold-build.xml scaffold:create -Dimpala.home=./ -Dproject.version=SNAPSHOT`_

You will then be guided through an interactive process where you will need to specify the following information:

  * the version of Impala corresponding to the contents of Impala home, which you will need to manualy set if not using the SNAPSHOT build. (This step will be removed in the next release: see http://code.google.com/p/impala/issues/detail?id=75).
  * the name of the project containing the root Impala module. This project is a kind of a master project, and will also be the project from which you will typically run ANT build scripts when this is necessary.
  * the name of the project containing a non-root module. In a real world application, non-root modules would contain implementations of DAOs, service methods - anything really. In a substantial real world application there will be several if not many non-root modules, together forming a hierarchy of modules.
  * the name of a project containing a web module. Although it is possible to have multiple web modules in a single application, the simple scaffolding starts with just one web project.
  * the name of the repository project. This contains the third party jars used by the different application modules.
  * finally, the name of the test project. The test project is really a convenience from which you can easily run suites of tests for the entire application.

The last time I ran this command, the following output was produced:

{{{
ant newproject
Buildfile: build.xml

impalaversion:
    [input] Please specify Impala version in IMPALA_HOME [SNAPSHOT]
1.0M3

newproject:
     [echo] Creating new project structure, Impala version 1.0M3

scaffold:input-workspace-root:
    [input] Please enter name of workspace root directory:
/Users/philzoio/workspaces/newproject

scaffold:input-main-project:
    [input] Please enter main project name, to be used for root module:
main

scaffold:input-module-project:
    [input] Please enter name of first non-root module:
module1

scaffold:input-web-project:
    [input] Please enter name of web module:
web

scaffold:input-test-project:
    [input] Please enter name of tests project:
test

scaffold:input-repository-project:
    [input] Please enter name of repository project:
repository

scaffold:newproject-confirm:
     [echo] Workspace root location: /Users/philzoio/workspaces/newproject
     [echo] Main (root) project name: main
     [echo] First non-root module project name: module1
     [echo] Web project name: web
     [echo] Tests project name: test
     [echo] Repository project name: repository
    [input] Press return key to continue, or CTRL + C to quit ...

    [mkdir] Created dir: /Users/philzoio/workspaces/newproject

scaffold:filterset:

scaffold:copymain:
     [copy] Copying 7 files to /Users/philzoio/workspaces/newproject/main
     [copy] Copied 6 empty directories to 4 empty directories under /Users/philzoio/workspaces/newproject/main
     [copy] Copying 3 files to /Users/philzoio/workspaces/newproject/main
     [copy] Copying 1 file to /Users/philzoio/workspaces/newproject/main/resources

scaffold:copymodule:
     [copy] Copying 5 files to /Users/philzoio/workspaces/newproject/module1
     [copy] Copied 5 empty directories to 3 empty directories under /Users/philzoio/workspaces/newproject/module1
     [copy] Copying 2 files to /Users/philzoio/workspaces/newproject/module1
     [copy] Copying 1 file to /Users/philzoio/workspaces/newproject/module1/resources

scaffold:copyweb:
     [copy] Copying 12 files to /Users/philzoio/workspaces/newproject/web
     [copy] Copied 8 empty directories to 3 empty directories under /Users/philzoio/workspaces/newproject/web
     [copy] Copying 2 files to /Users/philzoio/workspaces/newproject/web
     [copy] Copying 1 file to /Users/philzoio/workspaces/newproject/web/resources

scaffold:create:
     [copy] Copying 2 files to /Users/philzoio/workspaces/newproject/test
     [copy] Copying 1 file to /Users/philzoio/workspaces/newproject/test
     [copy] Copying 1 file to /Users/philzoio/workspaces/newproject/repository
     [copy] Copied 2 empty directories to 1 empty directory under /Users/philzoio/workspaces/newproject/repository

BUILD SUCCESSFUL
Total time: 37 seconds

}}}

Before we import the Eclipse project, there are just two more steps to follow:

First, go the main newly project, and run the following two commands:

{{{
cd /Users/philzoio/workspaces/scaffold/main
ant fetch
ant get
}}}

The fetch command will copy the Impala libraries into the repository project of the new workspace, as shown by the following output.

{{{
ant fetch
Buildfile: build.xml
[echo] Project using workspace.root: /Users/philzoio/workspaces/scaffold
[echo] Project using impala home: /Users/philzoio/impala-SNAPSHOT

repository:fetch-impala-from-lib:
[copy] Copying 12 files to /Users/philzoio/workspaces/scaffold/repository/main

repository:fetch-impala-from-repository:

repository:fetch-impala:

fetch:

BUILD SUCCESSFUL
}}}

The get command downloads the necessary third party libraries, as defined using a simple format in _dependencies.txt_ files.

{{{
ant get
Buildfile: build.xml
[echo] Project using workspace.root: /Users/philzoio/workspaces/scaffold
[echo] Project using impala home: /Users/philzoio/impala-SNAPSHOT

shared:get:
[echo] Project using workspace.root: /Users/philzoio/workspaces/scaffold
[echo] Project using impala home: /Users/philzoio/impala-SNAPSHOT

download:get:
[mkdir] Created dir: /Users/philzoio/workspaces/scaffold/repository/build
[mkdir] Created dir: /Users/philzoio/workspaces/scaffold/repository/test
[get] Getting: http://ibiblio.org/pub/packages/maven2/commons-logging/commons-logging/1.1/commons-logging-1.1.jar
[get] To: /Users/philzoio/workspaces/scaffold/repository/main/commons-logging-1.1.jar
[get] Getting: http://ibiblio.org/pub/packages/maven2/commons-logging/commons-logging/1.1/commons-logging-1.1-sources.jar
[get] To: /Users/philzoio/workspaces/scaffold/repository/main/commons-logging-1.1-sources.jar

...

[download] ******************************************************
[download]
[download]                RESULTS OF DOWNLOAD OPERATION
[download]
[download] org/springframework/spring-webmvc/2.5.5/spring-webmvc-2.5.5.jar resolved from
http://ibiblio.org/pub/packages/maven2/org/springframework/spring-webmvc/2.5.5/spring-webmvc-2.5.5.jar
[download] org/springframework/spring-webmvc/2.5.5/spring-webmvc-2.5.5-sources.jar resolved from
http://ibiblio.org/pub/packages/maven2/org/springframework/spring-webmvc/2.5.5/spring-webmvc-2.5.5-sources.jar
[download]
[download] ******************************************************

get:

BUILD SUCCESSFUL
Total time: 3 minutes 6 seconds
}}}

We're now ready to import our projects into Eclipse. Start by opening Eclipse in the newly created workspace.

Use the menus File -> Import ... -> General -> Existing Projects Into Workspace. When prompted, set the import base directory to the workspace root directory. This should bring up a dialog box as shown below.

http://impala.googlecode.com/svn/wiki/images/scaffold_import.jpg

Select all of the projects and import them.

If you reach this point and no errors are showing in your workspace, the congratulations! You have just set up a new Impala workspace, with a working application.

== Workspace structure == 

The workspace we created in part one consists of five Eclipse projects:

  * *main* the main project, which contains the root module as well as master build scripts
  * *module1* a single sub-module, which contains an implementation of one of the services we define in the root module.
  * *repository* a project which serves purely as a repository for third party dependenciies, including the Impala libraries used by the application.
  * *web* a web project, consisting of web application classes, view templates, web configuration files, etc.
  * *tests* a tests project.

Here's a view of the workspace in Eclipse.

http://impala.googlecode.com/svn/wiki/images/scaffold_messageService.jpg

The roles played by the various parts of the project will become more clear in [GettingStartedPart2 part two], where we'll get to grips with the simple application that the quick starter has created. In [GettingStartedPart3 part three], we explore Impala's test environment in a bit more detail. In [GettingStartedPart4 part four], we'll look a bit more closely at working with a the web application.