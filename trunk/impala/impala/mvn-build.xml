<?xml version="1.0"?>
<project name="Maven Project Build" default="mvn:publish-local" xmlns:artifact="antlib:org.apache.maven.artifact.ant">

    <property name="workspace.root" location=".." />
    <property name="impala.home" location="${workspace.root}/impala" />
    <import file="${impala.home}/properties-build.xml" />
    <import file="${impala.home}/tasks-build.xml" />

    <property file = "${impala.home}/mvn-build.properties"/>
    <property name="maven.repo.root.location" location="${maven.repo.root}" />
    
    <!-- Local publishing to local SVN maven repo -->
    
    <target name="mvn:publish-local">
        
        <!-- Copies created artifacts from dist directory to Maven publish directory.
        Also generates simple POMs for each artifact. 
        -->
        <mavenpublish 
            sourceDir = "${repository.dir}/dist" 
            artifacts = "${maven.artifacts}" 
            organisation = "${maven.organisation}"
            destdir = "${maven.repo.root.location}"
    		sharedPomFragment = "${maven.shared.pom.fragment}"/>
    </target>
    
    <!-- Deployment to remove maven repo -->

    <path id="maven-ant-tasks.classpath" path="${impala.home}/mvn/maven-ant-tasks-2.0.10.jar" />
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
       uri="antlib:org.apache.maven.artifact.ant"
       classpathref="maven-ant-tasks.classpath" />
    
    <target name="mvn:username" unless="mvn.username">
        <input message="Maven repo user name:" addproperty="mvn.username" />
    </target>
    
    <target name="mvn:password" unless="mvn.password">
        <input message="Maven repo password:" addproperty="mvn.password" />
    </target>
    
    <target name="mvn:repo-snapshot" unless="maven.release">
        <property name = "mvn.repo.current" value = "${maven.snapshot.repository}"/>
    </target>
    
    <target name="mvn:repo-release" if="maven.release">
        <property name = "mvn.repo.current" value = "${maven.release.repository}"/>
    </target>

	<!--
	e.g. ant mvndeploy -Dmaven.release=true to add to release repository
	-->
    <target name="mvn:deploy" depends = "mvn:username, mvn:password, mvn:repo-snapshot, mvn:repo-release">
        
        <echo>Maven organisation: ${maven.organisation}</echo>
        
        <artifact:install-provider artifactId="wagon-http" version="1.0-beta-2"/>
        
        <artifactpath property = "artifact.location" 
            organisation = "${maven.organisation}"
            artifact = "${project.name}"
            version = "${project.version}"/>

        <artifact:pom id="mypom" file="${maven.repo.root.location}/${artifact.location.pom}" />

        <artifact:deploy 
            file="${maven.repo.root.location}/${artifact.location}" uniqueversion="false">
            <remoteRepository url="${mvn.repo.current}">
                <authentication username="${mvn.username}" password="${mvn.password}"/>
            </remoteRepository>
            <pom refid="mypom"/>
            <attach file="${maven.repo.root.location}/${artifact.location.sources}" classifier="sources" /> 
        </artifact:deploy>
    </target>
	
	<target name = "sign">
		<input message="Please specify a password file" addproperty="input.password.file"/>
		<property name="password.file" location="${input.password.file}"/>
		<exec dir="./" executable="gpg">
			<arg line = "--batch -ab --passphrase-fd -o ${file.name}.asc ${file.name} &lt; ${password.file}"/>
		</exec>
	</target>

</project>
