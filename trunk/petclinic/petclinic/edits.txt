Database

emptyDB.txt, Line 2 insert

DELETE FROM surgeries;

-----

initDB.txt, add

CREATE TABLE surgeries (
  id INT(4) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(80),
  location VARCHAR(255),
  INDEX(name)
);

-----

populateDB.txt

INSERT INTO surgeries VALUES (1, 'Dogs Friend', 'Kings Cross');
INSERT INTO surgeries VALUES (2, 'Cats Comfort', 'Marylebone');
INSERT INTO surgeries VALUES (3, 'Animal Sanctuary', 'Richmond');

INSERT INTO vets VALUES (1, 'James', 'Carter', 1);
INSERT INTO vets VALUES (2, 'Helen', 'Leary', 1);
INSERT INTO vets VALUES (3, 'Linda', 'Douglas', 2);
INSERT INTO vets VALUES (4, 'Rafael', 'Ortega', 2);
INSERT INTO vets VALUES (5, 'Henry', 'Stevens', 3);
INSERT INTO vets VALUES (6, 'Sharon', 'Jenkins', 3);

-----

Execute in mysql
alter table vets add column surgery_id INT(4) UNSIGNED NOT NULL REFERENCES surgeries(id);

to reverse:
alter table vets drop column surgery_id;


-------------------------------------------

Same package, Add 

package org.springframework.samples.petclinic;

public class Surgery extends NamedEntity {

	private String location;

	public String getLocation() {
		return location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

}

-----

Vet.java

Add

	private Surgery surgery;

	public Surgery getSurgery() {
		return surgery;
	}

	public void setSurgery(Surgery surgery) {
		this.surgery = surgery;
	}
	
-----

petclinic.hbm.xml

	<class name="org.springframework.samples.petclinic.Vet" table="vets">
		<id name="id" column="id">
			<generator class="increment"/>
		</id>
		<property name="firstName" column="first_name"/>
		<property name="lastName" column="last_name"/>
		<set name="specialtiesInternal" table="vet_specialties">
			<key column="vet_id"/>
			<many-to-many column="specialty_id" class="org.springframework.samples.petclinic.Specialty"/>
		</set>
		<many-to-one name="surgery" column="surgery_id" class="org.springframework.samples.petclinic.Surgery"/>
	</class>
	
	<class name="org.springframework.samples.petclinic.Surgery" table="surgeries">
		<id name="id" column="id">
			<generator class="increment"/>
		</id>
		<property name="name" column="name"/>
		<property name="location" column="location"/>
	</class>
	
-----

Clinic.java

Add 

	
	Collection getSurgeries() throws DataAccessException;
	
	void storeVet(Vet vet) throws DataAccessException;

	Vet loadVet(int requiredIntParameter);

-----

HibernateClinicTest.java

	public void testGetSurgery() {
		Collection<Vet> vets = this.clinic.getVets();
		Collection<Surgery> surgeries = this.clinic.getSurgeries();
		assertEquals(3, surgeries.size());
		
		Surgery firstSurgery = surgeries.iterator().next();
	
		for (Vet vet : vets) {
			vet.setSurgery(firstSurgery);
			this.clinic.storeVet(vet);
		}
		
		vets = this.clinic.getVets();

		for (Vet vet : vets) {
			assertEquals(vet.getId(), this.clinic.loadVet(vet.getId()).getId());
			assertEquals(firstSurgery.getId(), vet.getSurgery().getId());
		}
	}
	
	public void testGetSurgeries() {
		Collection surgeries = this.clinic.getSurgeries();
		assertEquals(3, surgeries.size());
	}

-----

HibernateClinic.java

Add 

	public Collection getSurgeries() throws DataAccessException {
		return getHibernateTemplate().find("from Surgery surgery");
	}

	public void storeVet(Vet vet) throws DataAccessException {
		getHibernateTemplate().merge(vet);
	}

	public Vet loadVet(int id) {
		return (Vet) getHibernateTemplate().load(Vet.class, new Integer(id));
	}

-------------------------------------------

We now have enough to figure out what the surgery of a vet is, and to update it

Web

Add EditVetForm

package org.springframework.samples.petclinic.web;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;

import org.springframework.samples.petclinic.Surgery;
import org.springframework.samples.petclinic.Vet;
import org.springframework.samples.petclinic.util.EntityUtils;
import org.springframework.web.bind.ServletRequestUtils;
import org.springframework.web.servlet.ModelAndView;

public class EditVetForm extends AbstractClinicForm {

	public EditVetForm() {
		setCommandName("vet");
		// need a session to hold the formBackingObject
		setSessionForm(true);
		// initialize the form from the formBackingObject
		setBindOnNewForm(true);
	}

	@SuppressWarnings("unchecked")
	protected Map referenceData(HttpServletRequest request) throws ServletException {
		Map refData = new HashMap();
		refData.put("surgeries", getClinic().getSurgeries());
		return refData;
	}

	protected Object formBackingObject(HttpServletRequest request) throws ServletException {
		// get the vet referred to by id in the request
		return getClinic().loadVet(ServletRequestUtils.getRequiredIntParameter(request, "vetId"));
	}

	protected void onBind(HttpServletRequest request, Object command) throws ServletException {
		Vet vet = (Vet) command;
		int surgeryId = ServletRequestUtils.getRequiredIntParameter(request, "surgeryId");
		
		System.out.println("Surgery id:" + surgeryId);
		vet.setSurgery((Surgery) EntityUtils.getById(getClinic().getSurgeries(), Surgery.class, surgeryId));
	}

	/** Method updates an existing vet */
	protected ModelAndView onSubmit(Object command) throws ServletException {
		Vet vet = (Vet) command;
		// delegate the update to the business layer
		getClinic().storeVet(vet);
		return new ModelAndView(getSuccessView(), "vetId", vet.getId());
	}

}

-----

petclinic-web-context.xml

urlMapping
				<prop key="/editVet.htm">editVetForm</prop>
				
New bean definition:

	<bean id="editVetForm" class="org.springframework.samples.petclinic.web.EditVetForm">
		<property name="formView" value="vetForm"/>
		<property name="clinic" ref="clinic"/>
		<property name="successView" value="vetsRedirect"/>
	</bean>
	
-----

views.properties

Add 

vetForm.(class)=org.springframework.web.servlet.view.JstlView
vetForm.url=/WEB-INF/jsp/vetForm.jsp

vetsRedirect.(class)=org.springframework.web.servlet.view.RedirectView
vetsRedirect.url=vets.htm

context/WEB-INF/jsp

Add vetForm.jsp

<%@ include file="/WEB-INF/jsp/includes.jsp" %>
<%@ include file="/WEB-INF/jsp/header.jsp" %>

    <P>
    <H2>Vet information</H2>
            
    <FORM method=POST action="<c:url value="/editVet.htm"/>">
    
    <INPUT type = "hidden" name = "vetId" value = "<c:out value="${vet.id}"/>"/>

    <TABLE border="0">
      <TR><TD>First Name</TD><TD><b><c:out value="${vet.firstName}"/></b></TD></TR> 
      <TR><TD>Last Name</TD><TD><b><c:out value="${vet.lastName}"/></b></TD></TR>     
      <TR>
        <TD>Surgery</TD>
        <TD>
  
			  <spring:bind path="vet.surgery">
			    <FONT color="red">
			      <B><c:out value="${status.errorMessage}"/></B>
			    </FONT>
			    <BR>
			    <SELECT name="surgeryId">
			      <c:forEach var="surg" items="${surgeries}">
		<c:if test="${vet.surgery.id == surg.id}">
          <OPTION selected="<c:out value="${vet.surgery.id}"/>" value="<c:out value="${surg.id}"/>"><c:out value="${surg.name}"/></OPTION>
        </c:if>
        <c:if test="${vet.surgery.id != surg.id}">
          <OPTION value="<c:out value="${surg.id}"/>"><c:out value="${surg.name}"/></OPTION>
        </c:if>
			      </c:forEach>        
			      

			    </SELECT>
			  </spring:bind>
  	
  			<br/>
        </TD>
      </TR>
      <TR>
      <TD colspan = "2"><INPUT type = "submit" value="Update Vet"  /></TD>
      </TR> 
    </TABLE>
          
    </FORM>
  
<%@ include file="/WEB-INF/jsp/footer.jsp" %>

------

vets.jsp

Update line 7

 <TH>Name</TH><TH>Specialties</TH><TH>Surgery</TH>
 
Update line 19 to 21

      <TD><c:if test="${vet.surgery != null}">
				  <A href="<c:url value="/editVet.htm"><c:param name = "vetId" value = "${vet.id}"/></c:url>"><c:out value="${vet.surgery.name}"/></A>
		 </c:if>
      </TD>

-----







